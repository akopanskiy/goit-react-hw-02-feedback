{"version":3,"sources":["components/Notification/Notification.js","components/Statistic/Statistic.js","components/Buttons/FeedbackOptions.js","components/Section/Section.js","App.js","index.js","components/Statistic/Statistic.module.css","components/Buttons/Buttons.module.css","components/Section/Section.module.css"],"names":["NotificationMessage","text","className","styles","notify","Statistic","good","neutral","bad","total","percentage","title","statList","Notification","FeedbackOptions","options","onLeaveFeedback","optionKeys","Object","keys","buttons","map","key","button","type","value","onClick","Section","children","section","App","state","feedbackCounter","e","feedbackValue","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oPAMeA,EAHa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC7B,OAAO,mBAAGC,UAAWC,IAAOC,OAArB,SAA8BH,KC2BxBI,EA1BG,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC9C,OACE,qCACE,oBAAIR,UAAWC,IAAOQ,MAAtB,uBACCF,EAAQ,EACP,qBAAIP,UAAWC,IAAOS,SAAtB,UACE,wCAAWN,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,UAGF,cAACG,EAAD,CAAqBZ,KAAM,0B,gBCepBa,EA7BS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAaC,OAAOC,KAAKJ,GAE/B,OACE,qBAAKb,UAAWC,IAAOiB,QAAvB,SACGH,EAAWI,KAAI,SAAAC,GAAG,OACjB,wBACEpB,UAAWC,IAAOoB,OAElBC,KAAK,SACLC,MAAOH,EACPI,QAASV,EALX,SAOGM,GALIA,S,gBCDAK,EARC,SAAC,GAAyB,IAAvBhB,EAAsB,EAAtBA,MAAOiB,EAAe,EAAfA,SACxB,OACE,sBAAK1B,UAAWC,IAAO0B,QAAvB,UACE,oBAAI3B,UAAWC,IAAOQ,MAAtB,SAA8BA,IAC7BiB,MCwCQE,E,4MAzCbC,MAAQ,CAAEzB,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCwB,gBAAkB,SAAAC,GAChB,IAAMC,EAAgBD,EAAEE,OAAOV,MAE/B,EAAKW,UAAS,SAAAC,GAAS,sBACpBH,EAAgBG,EAAUH,GAAiB,O,EAIhDI,mBAAqB,WACnB,OAAO,EAAKP,MAAMzB,KAAO,EAAKyB,MAAMxB,QAAU,EAAKwB,MAAMvB,K,EAE3D+B,gCAAkC,WAChC,OAA0B,IAAlB,EAAKR,MAAMzB,KAAc,EAAKgC,sB,4CAGxC,WACE,IAAM7B,EAAQ+B,KAAKF,qBACb5B,EAAa+B,KAAKC,MAAMF,KAAKD,mCACnC,OACE,qCACE,cAAC,EAAD,CAAS5B,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEI,QAASyB,KAAKT,MACdf,gBAAiBwB,KAAKR,oBAG1B,cAAC,EAAD,UACE,cAAC,EAAD,CACE1B,KAAMkC,KAAKT,MAAMzB,KACjBC,QAASiC,KAAKT,MAAMxB,QACpBC,IAAKgC,KAAKT,MAAMvB,IAChBC,MAAOA,EACPC,WAAYA,a,GAnCNiC,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,OAAS,0BAA0B,SAAW,8B,kBCAjGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,0B,kBCA9DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.3cc53f2d.chunk.js","sourcesContent":["import React from 'react';\nimport styles from '../Statistic/Statistic.module.css';\n\nconst NotificationMessage = ({ text }) => {\n  return <p className={styles.notify}>{text}</p>;\n};\nexport default NotificationMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NotificationMessage from '../Notification';\nimport styles from './Statistic.module.css';\n\nconst Statistic = ({ good, neutral, bad, total, percentage }) => {\n  return (\n    <>\n      <h2 className={styles.title}>Statistic</h2>\n      {total > 0 ? (\n        <ul className={styles.statList}>\n          <li>Good: {good}</li>\n          <li>Neutral: {neutral}</li>\n          <li>Bad: {bad}</li>\n          <li>Total: {total}</li>\n          <li>Positive feedback: {percentage}%</li>\n        </ul>\n      ) : (\n        <NotificationMessage text={'No feedback given'} />\n      )}\n    </>\n  );\n};\n\nStatistic.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Buttons.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const optionKeys = Object.keys(options);\n\n  return (\n    <div className={styles.buttons}>\n      {optionKeys.map(key => (\n        <button\n          className={styles.button}\n          key={key}\n          type=\"button\"\n          value={key}\n          onClick={onLeaveFeedback}\n        >\n          {key}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={styles.section}>\n      <h1 className={styles.title}>{title}</h1>\n      {children}\n    </div>\n  );\n};\nexport default Section;\n","import React, { Component } from 'react';\nimport Statistic from './components/Statistic';\nimport FeedbackOptions from './components/Buttons';\nimport Section from './components/Section';\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  feedbackCounter = e => {\n    const feedbackValue = e.target.value;\n\n    this.setState(prevState => ({\n      [feedbackValue]: prevState[feedbackValue] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    return (this.state.good * 100) / this.countTotalFeedback();\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    const percentage = Math.round(this.countPositiveFeedbackPercentage());\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.feedbackCounter}\n          />\n        </Section>\n        <Section>\n          <Statistic\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={total}\n            percentage={percentage}\n          />\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistic_title__2kXld\",\"notify\":\"Statistic_notify__lqFu8\",\"statList\":\"Statistic_statList__364fd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Buttons_buttons__3CSMe\",\"button\":\"Buttons_button__15i5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__FysoB\",\"title\":\"Section_title__aulIu\"};"],"sourceRoot":""}